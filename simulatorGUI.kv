#:kivy 2.0.0

#:import NoTransition kivy.uix.screenmanager.NoTransition

WindowManager:
    setup: setup
    sim_screen: sim_screen
    WelcomeScreen:
    SetupScreen:
        id: setup
    SimulationScreen:
        id: sim_screen

<WelcomeScreen>:
    name:"welcome"
    
    BoxLayout:
        orientation: "vertical"
        size: root.width, root.height

        Label:
            text: "Welcome to the BGP Study Buddy Tool!"
            font_size: 32
        
        Button:
            text: "Let's get started!"
            font_size: 32
            on_release: 
                app.root.transition = NoTransition()
                app.root.current = "setup"

<SetupScreen>:
    name:"setup"
    network_canvas:network_canvas
    peerlink: peerlink
    pclink: pclink
    node_name: node_name
    delete_node_name: delete_node_name
    # peer_one:peer_one
    # peer_two:peer_two
    BoxLayout:
        orientation: "horizontal"
        BoxLayout:
            size_hint_x: .4
            spacing: 5
            padding: 5
            orientation: "vertical"

            Label: 
                text: "Node name:"
                size_hint_y: .2
            TextInput:
                id: node_name
                multiline: False
            Button:
                text: "Add node"
                on_release:
                    root.add_nodes(node_name.text)

            Label: 
                text: "Node name:"
                size_hint_y: .2
            TextInput:
                id: delete_node_name
                multiline: False
            Button:
                text: "Delete node"
                on_release:
                    root.delete_nodes(delete_node_name.text)

            Label: 
                text: "Add peer link:    p = p"
                size_hint_y: .2
            
            TextInput:
                id: peerlink
                text: "p1 = p2"
                multiline: False
            Button:
                text: "Add link" 
                on_release: 
                    root.add_peer_relationship()

            Label: 
                text: "Add provider-customer link:    p -> c"
                size_hint_y: .2
           
            TextInput:
                text: "p -> c"
                multiline: False
                id: pclink
            Button:
                text: "Add link" 
                on_release: 
                    root.add_pc_relationship()
        
            Button:
                text: "I'm done setting up"
                # font_size: 32
                on_release: 
                    root.populate_sim_screen()
                    app.root.transition = NoTransition()
                    app.root.current = "simulate"
        NetworkCanvas:
            id: network_canvas
            size_hint_x: .6

<SimulationScreen>: 
    name:"simulate"
    dest_node: dest_node
    results: results
    final_network_canvas: final_network_canvas
    BoxLayout:
        orientation: "horizontal" 
        BoxLayout:
            orientation: "vertical"
            size_hint_x: .4
            padding: 10
            spacing: 5
            Label:
                text: "Destination node:"
                size_hint_y: .2

            TextInput:
                id: dest_node 
                multiline: False
                size_hint_y: .2

            Button:
                text: "Simulate!"
                size_hint_y: .2
                on_release:
                    root.simulate()

            Label:
                size_hint_y: .1
                text: "Results:"

            ScrollView:
                Label:
                    id: results
                    text_size: self.width, None
                    size_hint_y: None
                    height: self.texture_size[1]
                    halign: 'left'
                    valign: 'top'
            
            BoxLayout:
                orientation: "horizontal"
                size_hint_y: .2
                spacing: 5
                padding: 5
                Button:
                    text: "Edit network"
                    on_release: 
                        root.edit_network()
                        app.root.transition = NoTransition()
                        app.root.current = "setup"

                Button:
                    text: "Start over"
                    on_release: 
                        app.root.transition = NoTransition()
                        app.root.current = "welcome"
                        root.start_over()
        NetworkCanvas:
            id: final_network_canvas
            size_hint_x: .6

<NetworkCanvas>:
    canvas:
        Color: 
            rgb: 255,255,255
        Rectangle:
            pos: self.pos
            size: self.size

<NodeG>:
    size: 50,50
    canvas:
        Color:
            rgb: .96,.50,.14
        Ellipse:
            pos:self.pos
            size:self.size
    Label:
        text: self.parent.node_name
        color: 0,0,0
        pos:self.parent.pos
        size: self.parent.size
        font_size: 32

<FixedNode>:
    size: 50,50
    canvas:
        Color:
            rgb: .96,.50,.14
        Ellipse:
            pos:self.pos
            size:self.size
    Label:
        text: self.parent.node_name
        color: 0,0,0
        pos:self.parent.pos
        size: self.parent.size
        font_size: 32
        
<PeerLink>:
    canvas:
        # Color:
        #     rgb: 0,1,0
        Line:
            points: self.points
            width: 2
        
<PCLink>:
    custIndicator: custIndicator
    canvas:
        # Color:
        #     rgb: 1,0,1
        Line:
            points: self.points
            width: 2
    CustIndicator:
        id: custIndicator


<CustIndicator>:
    canvas:
        Ellipse:
            pos: self.pos
            size: 20,20
